name: Terraform - Infrastructure

on:
  push:
    branches: [main]
    paths:
      - 'infrastructure/terraform/**'
      - '.github/workflows/terraform.yml'
  pull_request:
    branches: [main]
    paths:
      - 'infrastructure/terraform/**'

env:
  TF_VERSION: '1.6.0'
  WORKING_DIR: infrastructure/terraform

jobs:
  terraform-validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init -backend=false

      - name: Terraform Validate
        run: terraform validate

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: terraform-validate
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -no-color
        env:
          TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}

      - name: Azure Logout
        run: az logout

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-validate
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: production
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}

      - name: Terraform Output
        id: output
        run: |
          echo "backend_url=$(terraform output -raw backend_url)" >> $GITHUB_OUTPUT
          echo "frontend_url=$(terraform output -raw frontend_host_url)" >> $GITHUB_OUTPUT

      - name: Comment PR with URLs
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const output = `#### Terraform Deployment URLs ðŸš€
            
            - **Backend API**: ${{ steps.output.outputs.backend_url }}
            - **Frontend**: ${{ steps.output.outputs.frontend_url }}
            
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Azure Logout
        run: az logout
